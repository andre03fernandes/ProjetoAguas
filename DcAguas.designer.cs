#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjetoAguas
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Aguas")]
	public partial class DcAguasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClientes(Clientes instance);
    partial void UpdateClientes(Clientes instance);
    partial void DeleteClientes(Clientes instance);
    partial void InsertContratos(Contratos instance);
    partial void UpdateContratos(Contratos instance);
    partial void DeleteContratos(Contratos instance);
    partial void InsertConsumos(Consumos instance);
    partial void UpdateConsumos(Consumos instance);
    partial void DeleteConsumos(Consumos instance);
    partial void InsertFaturas(Faturas instance);
    partial void UpdateFaturas(Faturas instance);
    partial void DeleteFaturas(Faturas instance);
    #endregion
		
		public DcAguasDataContext() : 
				base(global::ProjetoAguas.Properties.Settings.Default.AguasConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DcAguasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcAguasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcAguasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcAguasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Clientes> Clientes
		{
			get
			{
				return this.GetTable<Clientes>();
			}
		}
		
		public System.Data.Linq.Table<Contratos> Contratos
		{
			get
			{
				return this.GetTable<Contratos>();
			}
		}
		
		public System.Data.Linq.Table<Consumos> Consumos
		{
			get
			{
				return this.GetTable<Consumos>();
			}
		}
		
		public System.Data.Linq.Table<Faturas> Faturas
		{
			get
			{
				return this.GetTable<Faturas>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Cliente.Clientes")]
	public partial class Clientes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCliente;
		
		private string _Nome;
		
		private string _Telefone;
		
		private string _NIF;
		
		private string _Email;
		
		private string _Morada;
		
		private string _CodigoPostal;
		
		private System.DateTime _ModificacaoData;
		
		private EntitySet<Contratos> _Contratos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdClienteChanging(int value);
    partial void OnIdClienteChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnTelefoneChanging(string value);
    partial void OnTelefoneChanged();
    partial void OnNIFChanging(string value);
    partial void OnNIFChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMoradaChanging(string value);
    partial void OnMoradaChanged();
    partial void OnCodigoPostalChanging(string value);
    partial void OnCodigoPostalChanged();
    partial void OnModificacaoDataChanging(System.DateTime value);
    partial void OnModificacaoDataChanged();
    #endregion
		
		public Clientes()
		{
			this._Contratos = new EntitySet<Contratos>(new Action<Contratos>(this.attach_Contratos), new Action<Contratos>(this.detach_Contratos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefone", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string Telefone
		{
			get
			{
				return this._Telefone;
			}
			set
			{
				if ((this._Telefone != value))
				{
					this.OnTelefoneChanging(value);
					this.SendPropertyChanging();
					this._Telefone = value;
					this.SendPropertyChanged("Telefone");
					this.OnTelefoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NIF", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string NIF
		{
			get
			{
				return this._NIF;
			}
			set
			{
				if ((this._NIF != value))
				{
					this.OnNIFChanging(value);
					this.SendPropertyChanging();
					this._NIF = value;
					this.SendPropertyChanged("NIF");
					this.OnNIFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Morada", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Morada
		{
			get
			{
				return this._Morada;
			}
			set
			{
				if ((this._Morada != value))
				{
					this.OnMoradaChanging(value);
					this.SendPropertyChanging();
					this._Morada = value;
					this.SendPropertyChanged("Morada");
					this.OnMoradaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodigoPostal", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string CodigoPostal
		{
			get
			{
				return this._CodigoPostal;
			}
			set
			{
				if ((this._CodigoPostal != value))
				{
					this.OnCodigoPostalChanging(value);
					this.SendPropertyChanging();
					this._CodigoPostal = value;
					this.SendPropertyChanged("CodigoPostal");
					this.OnCodigoPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificacaoData", DbType="DateTime2 NOT NULL")]
		public System.DateTime ModificacaoData
		{
			get
			{
				return this._ModificacaoData;
			}
			set
			{
				if ((this._ModificacaoData != value))
				{
					this.OnModificacaoDataChanging(value);
					this.SendPropertyChanging();
					this._ModificacaoData = value;
					this.SendPropertyChanged("ModificacaoData");
					this.OnModificacaoDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Contrato", Storage="_Contratos", ThisKey="IdCliente", OtherKey="IdCliente")]
		public EntitySet<Contratos> Contratos
		{
			get
			{
				return this._Contratos;
			}
			set
			{
				this._Contratos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Contratos(Contratos entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = this;
		}
		
		private void detach_Contratos(Contratos entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Contrato.Contratos")]
	public partial class Contratos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdContrato;
		
		private int _IdCliente;
		
		private string _DataContrato;
		
		private string _TipoContrato;
		
		private string _TipoPagamento;
		
		private string _Morada;
		
		private string _CodigoPostal;
		
		private System.DateTime _ModificacaoData;
		
		private EntitySet<Consumos> _Consumos;
		
		private EntityRef<Clientes> _Clientes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdContratoChanging(int value);
    partial void OnIdContratoChanged();
    partial void OnIdClienteChanging(int value);
    partial void OnIdClienteChanged();
    partial void OnDataContratoChanging(string value);
    partial void OnDataContratoChanged();
    partial void OnTipoContratoChanging(string value);
    partial void OnTipoContratoChanged();
    partial void OnTipoPagamentoChanging(string value);
    partial void OnTipoPagamentoChanged();
    partial void OnMoradaChanging(string value);
    partial void OnMoradaChanged();
    partial void OnCodigoPostalChanging(string value);
    partial void OnCodigoPostalChanged();
    partial void OnModificacaoDataChanging(System.DateTime value);
    partial void OnModificacaoDataChanged();
    #endregion
		
		public Contratos()
		{
			this._Consumos = new EntitySet<Consumos>(new Action<Consumos>(this.attach_Consumos), new Action<Consumos>(this.detach_Consumos));
			this._Clientes = default(EntityRef<Clientes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdContrato", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdContrato
		{
			get
			{
				return this._IdContrato;
			}
			set
			{
				if ((this._IdContrato != value))
				{
					this.OnIdContratoChanging(value);
					this.SendPropertyChanging();
					this._IdContrato = value;
					this.SendPropertyChanged("IdContrato");
					this.OnIdContratoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCliente", DbType="Int NOT NULL")]
		public int IdCliente
		{
			get
			{
				return this._IdCliente;
			}
			set
			{
				if ((this._IdCliente != value))
				{
					if (this._Clientes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdClienteChanging(value);
					this.SendPropertyChanging();
					this._IdCliente = value;
					this.SendPropertyChanged("IdCliente");
					this.OnIdClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataContrato", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DataContrato
		{
			get
			{
				return this._DataContrato;
			}
			set
			{
				if ((this._DataContrato != value))
				{
					this.OnDataContratoChanging(value);
					this.SendPropertyChanging();
					this._DataContrato = value;
					this.SendPropertyChanged("DataContrato");
					this.OnDataContratoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoContrato", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TipoContrato
		{
			get
			{
				return this._TipoContrato;
			}
			set
			{
				if ((this._TipoContrato != value))
				{
					this.OnTipoContratoChanging(value);
					this.SendPropertyChanging();
					this._TipoContrato = value;
					this.SendPropertyChanged("TipoContrato");
					this.OnTipoContratoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoPagamento", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TipoPagamento
		{
			get
			{
				return this._TipoPagamento;
			}
			set
			{
				if ((this._TipoPagamento != value))
				{
					this.OnTipoPagamentoChanging(value);
					this.SendPropertyChanging();
					this._TipoPagamento = value;
					this.SendPropertyChanged("TipoPagamento");
					this.OnTipoPagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Morada", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Morada
		{
			get
			{
				return this._Morada;
			}
			set
			{
				if ((this._Morada != value))
				{
					this.OnMoradaChanging(value);
					this.SendPropertyChanging();
					this._Morada = value;
					this.SendPropertyChanged("Morada");
					this.OnMoradaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodigoPostal", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string CodigoPostal
		{
			get
			{
				return this._CodigoPostal;
			}
			set
			{
				if ((this._CodigoPostal != value))
				{
					this.OnCodigoPostalChanging(value);
					this.SendPropertyChanging();
					this._CodigoPostal = value;
					this.SendPropertyChanged("CodigoPostal");
					this.OnCodigoPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificacaoData", DbType="DateTime2 NOT NULL")]
		public System.DateTime ModificacaoData
		{
			get
			{
				return this._ModificacaoData;
			}
			set
			{
				if ((this._ModificacaoData != value))
				{
					this.OnModificacaoDataChanging(value);
					this.SendPropertyChanging();
					this._ModificacaoData = value;
					this.SendPropertyChanged("ModificacaoData");
					this.OnModificacaoDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contratos_Consumo", Storage="_Consumos", ThisKey="IdContrato", OtherKey="IdContrato")]
		public EntitySet<Consumos> Consumos
		{
			get
			{
				return this._Consumos;
			}
			set
			{
				this._Consumos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Contrato", Storage="_Clientes", ThisKey="IdCliente", OtherKey="IdCliente", IsForeignKey=true)]
		public Clientes Clientes
		{
			get
			{
				return this._Clientes.Entity;
			}
			set
			{
				Clientes previousValue = this._Clientes.Entity;
				if (((previousValue != value) 
							|| (this._Clientes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clientes.Entity = null;
						previousValue.Contratos.Remove(this);
					}
					this._Clientes.Entity = value;
					if ((value != null))
					{
						value.Contratos.Add(this);
						this._IdCliente = value.IdCliente;
					}
					else
					{
						this._IdCliente = default(int);
					}
					this.SendPropertyChanged("Clientes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Consumos(Consumos entity)
		{
			this.SendPropertyChanging();
			entity.Contratos = this;
		}
		
		private void detach_Consumos(Consumos entity)
		{
			this.SendPropertyChanging();
			entity.Contratos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Leitura.Consumos")]
	public partial class Consumos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdConsumo;
		
		private int _IdContrato;
		
		private int _IdFatura;
		
		private decimal _Escaloes;
		
		private decimal _ValorUnitario;
		
		private string _DataConsumo;
		
		private string _ConsumoTotal;
		
		private System.DateTime _ModificacaoData;
		
		private EntityRef<Contratos> _Contratos;
		
		private EntityRef<Faturas> _Faturas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdConsumoChanging(int value);
    partial void OnIdConsumoChanged();
    partial void OnIdContratoChanging(int value);
    partial void OnIdContratoChanged();
    partial void OnIdFaturaChanging(int value);
    partial void OnIdFaturaChanged();
    partial void OnEscaloesChanging(decimal value);
    partial void OnEscaloesChanged();
    partial void OnValorUnitarioChanging(decimal value);
    partial void OnValorUnitarioChanged();
    partial void OnDataConsumoChanging(string value);
    partial void OnDataConsumoChanged();
    partial void OnConsumoTotalChanging(string value);
    partial void OnConsumoTotalChanged();
    partial void OnModificacaoDataChanging(System.DateTime value);
    partial void OnModificacaoDataChanged();
    #endregion
		
		public Consumos()
		{
			this._Contratos = default(EntityRef<Contratos>);
			this._Faturas = default(EntityRef<Faturas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdConsumo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdConsumo
		{
			get
			{
				return this._IdConsumo;
			}
			set
			{
				if ((this._IdConsumo != value))
				{
					this.OnIdConsumoChanging(value);
					this.SendPropertyChanging();
					this._IdConsumo = value;
					this.SendPropertyChanged("IdConsumo");
					this.OnIdConsumoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdContrato", DbType="Int NOT NULL")]
		public int IdContrato
		{
			get
			{
				return this._IdContrato;
			}
			set
			{
				if ((this._IdContrato != value))
				{
					if (this._Contratos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdContratoChanging(value);
					this.SendPropertyChanging();
					this._IdContrato = value;
					this.SendPropertyChanged("IdContrato");
					this.OnIdContratoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFatura", DbType="Int NOT NULL")]
		public int IdFatura
		{
			get
			{
				return this._IdFatura;
			}
			set
			{
				if ((this._IdFatura != value))
				{
					if (this._Faturas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFaturaChanging(value);
					this.SendPropertyChanging();
					this._IdFatura = value;
					this.SendPropertyChanged("IdFatura");
					this.OnIdFaturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Escaloes", DbType="Decimal(5,2) NOT NULL")]
		public decimal Escaloes
		{
			get
			{
				return this._Escaloes;
			}
			set
			{
				if ((this._Escaloes != value))
				{
					this.OnEscaloesChanging(value);
					this.SendPropertyChanging();
					this._Escaloes = value;
					this.SendPropertyChanged("Escaloes");
					this.OnEscaloesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValorUnitario", DbType="Decimal(5,2) NOT NULL")]
		public decimal ValorUnitario
		{
			get
			{
				return this._ValorUnitario;
			}
			set
			{
				if ((this._ValorUnitario != value))
				{
					this.OnValorUnitarioChanging(value);
					this.SendPropertyChanging();
					this._ValorUnitario = value;
					this.SendPropertyChanged("ValorUnitario");
					this.OnValorUnitarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataConsumo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DataConsumo
		{
			get
			{
				return this._DataConsumo;
			}
			set
			{
				if ((this._DataConsumo != value))
				{
					this.OnDataConsumoChanging(value);
					this.SendPropertyChanging();
					this._DataConsumo = value;
					this.SendPropertyChanged("DataConsumo");
					this.OnDataConsumoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumoTotal", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ConsumoTotal
		{
			get
			{
				return this._ConsumoTotal;
			}
			set
			{
				if ((this._ConsumoTotal != value))
				{
					this.OnConsumoTotalChanging(value);
					this.SendPropertyChanging();
					this._ConsumoTotal = value;
					this.SendPropertyChanged("ConsumoTotal");
					this.OnConsumoTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificacaoData", DbType="DateTime2 NOT NULL")]
		public System.DateTime ModificacaoData
		{
			get
			{
				return this._ModificacaoData;
			}
			set
			{
				if ((this._ModificacaoData != value))
				{
					this.OnModificacaoDataChanging(value);
					this.SendPropertyChanging();
					this._ModificacaoData = value;
					this.SendPropertyChanged("ModificacaoData");
					this.OnModificacaoDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contratos_Consumo", Storage="_Contratos", ThisKey="IdContrato", OtherKey="IdContrato", IsForeignKey=true)]
		public Contratos Contratos
		{
			get
			{
				return this._Contratos.Entity;
			}
			set
			{
				Contratos previousValue = this._Contratos.Entity;
				if (((previousValue != value) 
							|| (this._Contratos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contratos.Entity = null;
						previousValue.Consumos.Remove(this);
					}
					this._Contratos.Entity = value;
					if ((value != null))
					{
						value.Consumos.Add(this);
						this._IdContrato = value.IdContrato;
					}
					else
					{
						this._IdContrato = default(int);
					}
					this.SendPropertyChanged("Contratos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fatura_Consumos", Storage="_Faturas", ThisKey="IdFatura", OtherKey="IdFatura", IsForeignKey=true)]
		public Faturas Faturas
		{
			get
			{
				return this._Faturas.Entity;
			}
			set
			{
				Faturas previousValue = this._Faturas.Entity;
				if (((previousValue != value) 
							|| (this._Faturas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faturas.Entity = null;
						previousValue.Consumos.Remove(this);
					}
					this._Faturas.Entity = value;
					if ((value != null))
					{
						value.Consumos.Add(this);
						this._IdFatura = value.IdFatura;
					}
					else
					{
						this._IdFatura = default(int);
					}
					this.SendPropertyChanged("Faturas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Contrato.Faturas")]
	public partial class Faturas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFatura;
		
		private int _IdContrato;
		
		private string _DataFatura;
		
		private string _Cliente;
		
		private decimal _ConsumoMensal;
		
		private decimal _ValorPagar;
		
		private System.DateTime _ModificacaoData;
		
		private EntitySet<Consumos> _Consumos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFaturaChanging(int value);
    partial void OnIdFaturaChanged();
    partial void OnIdContratoChanging(int value);
    partial void OnIdContratoChanged();
    partial void OnDataFaturaChanging(string value);
    partial void OnDataFaturaChanged();
    partial void OnClienteChanging(string value);
    partial void OnClienteChanged();
    partial void OnConsumoMensalChanging(decimal value);
    partial void OnConsumoMensalChanged();
    partial void OnValorPagarChanging(decimal value);
    partial void OnValorPagarChanged();
    partial void OnModificacaoDataChanging(System.DateTime value);
    partial void OnModificacaoDataChanged();
    #endregion
		
		public Faturas()
		{
			this._Consumos = new EntitySet<Consumos>(new Action<Consumos>(this.attach_Consumos), new Action<Consumos>(this.detach_Consumos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFatura", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdFatura
		{
			get
			{
				return this._IdFatura;
			}
			set
			{
				if ((this._IdFatura != value))
				{
					this.OnIdFaturaChanging(value);
					this.SendPropertyChanging();
					this._IdFatura = value;
					this.SendPropertyChanged("IdFatura");
					this.OnIdFaturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdContrato", DbType="Int NOT NULL")]
		public int IdContrato
		{
			get
			{
				return this._IdContrato;
			}
			set
			{
				if ((this._IdContrato != value))
				{
					this.OnIdContratoChanging(value);
					this.SendPropertyChanging();
					this._IdContrato = value;
					this.SendPropertyChanged("IdContrato");
					this.OnIdContratoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFatura", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DataFatura
		{
			get
			{
				return this._DataFatura;
			}
			set
			{
				if ((this._DataFatura != value))
				{
					this.OnDataFaturaChanging(value);
					this.SendPropertyChanging();
					this._DataFatura = value;
					this.SendPropertyChanged("DataFatura");
					this.OnDataFaturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cliente", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				if ((this._Cliente != value))
				{
					this.OnClienteChanging(value);
					this.SendPropertyChanging();
					this._Cliente = value;
					this.SendPropertyChanged("Cliente");
					this.OnClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsumoMensal", DbType="Decimal(5,2) NOT NULL")]
		public decimal ConsumoMensal
		{
			get
			{
				return this._ConsumoMensal;
			}
			set
			{
				if ((this._ConsumoMensal != value))
				{
					this.OnConsumoMensalChanging(value);
					this.SendPropertyChanging();
					this._ConsumoMensal = value;
					this.SendPropertyChanged("ConsumoMensal");
					this.OnConsumoMensalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValorPagar", DbType="Decimal(7,2) NOT NULL")]
		public decimal ValorPagar
		{
			get
			{
				return this._ValorPagar;
			}
			set
			{
				if ((this._ValorPagar != value))
				{
					this.OnValorPagarChanging(value);
					this.SendPropertyChanging();
					this._ValorPagar = value;
					this.SendPropertyChanged("ValorPagar");
					this.OnValorPagarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModificacaoData", DbType="DateTime2 NOT NULL")]
		public System.DateTime ModificacaoData
		{
			get
			{
				return this._ModificacaoData;
			}
			set
			{
				if ((this._ModificacaoData != value))
				{
					this.OnModificacaoDataChanging(value);
					this.SendPropertyChanging();
					this._ModificacaoData = value;
					this.SendPropertyChanged("ModificacaoData");
					this.OnModificacaoDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fatura_Consumos", Storage="_Consumos", ThisKey="IdFatura", OtherKey="IdFatura")]
		public EntitySet<Consumos> Consumos
		{
			get
			{
				return this._Consumos;
			}
			set
			{
				this._Consumos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Consumos(Consumos entity)
		{
			this.SendPropertyChanging();
			entity.Faturas = this;
		}
		
		private void detach_Consumos(Consumos entity)
		{
			this.SendPropertyChanging();
			entity.Faturas = null;
		}
	}
}
#pragma warning restore 1591
